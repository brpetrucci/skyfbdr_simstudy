###
# Master template for coverage skyline FBDR sim study

# get rep from arguments
rep <- args[1]

# read ranges
taxa <- readTaxonData("simulation/coverage/specimens/taxa_" + rep + ".tsv")

# read time intervals
timeline <- readDataDelimitedFile("simulation/coverage/times/times_" + rep + ".tsv")[1]

# start moves vector
moves = VectorMoves()

# set lambdas
for (i in 1:(timeline.size() + 1)) {
  lambda[i] ~ dnLognormal(-2, 0.5)

  moves.append( mvSlice(lambda[i], window = 0.1, weight = 1, search_method = "stepping_out") )

  mu[i] ~ dnLognormal(-2, 0.5)
  
  moves.append( mvSlice(mu[i], window = 0.1, weight = 1, search_method = "stepping_out") )

  psi[i] ~ dnExp(1)
 
  moves.append( mvSlice(psi[i], window = 0.1, weight = 1, search_method = "stepping_out") )
}

# set rho based on ext_singles
rho <- 0 

# define FBDR matrix
bd ~ dnFBDRMatrix(taxa = taxa, lambda = lambda, mu = mu, psi = psi, rho = rho, timeline = timeline, condition = "time", complete = false)

moves.append( mvMatrixElementScale(bd, lambda = 0.01, weight=taxa.size()/10))
moves.append( mvMatrixElementScale(bd, lambda = 0.1, weight=taxa.size()/10))
moves.append( mvMatrixElementScale(bd, lambda = 1, weight=taxa.size()/10))

moves.append( mvMatrixElementSlide(bd, delta = 0.01, weight=taxa.size()/10))
moves.append( mvMatrixElementSlide(bd, delta = 0.1, weight=taxa.size()/10))
moves.append( mvMatrixElementSlide(bd, delta = 1, weight=taxa.size()/10))

mymodel = model(bd)

monitors = VectorMonitors()

# Create a vector of monitors #
monitors.append( mnModel(filename="output/coverage/skyfbdr_" + rep + ".log", printgen=10000) )
monitors.append( mnScreen(printgen = 100000) )

# Initialize the MCMC object #
mymcmc = mcmc(mymodel, monitors, moves)

# Run the MCMC #
mymcmc.run(generations=50000000)

# Quit RevBayes #
q()
